-- ============================================================================
-- VERIFICACI√ìN COMPLETA: Sistema de Avales 100% Funcional
-- Ejecutar despu√©s de asignar todos los avales hu√©rfanos
-- ============================================================================

-- 1. Verificar estado final
SELECT
  COUNT(*) as total_guarantors,
  COUNT(CASE WHEN created_by IS NULL THEN 1 END) as null_created_by,
  COUNT(CASE WHEN created_by IS NOT NULL THEN 1 END) as valid_created_by,
  COUNT(DISTINCT created_by) as unique_owners
FROM guarantors;

-- 2. Verificar distribuci√≥n por tipo
SELECT
  COUNT(CASE WHEN a.id IS NOT NULL THEN 1 END) as application_linked,
  COUNT(CASE WHEN a.id IS NULL THEN 1 END) as orphaned_assigned,
  COUNT(CASE WHEN created_by IS NULL THEN 1 END) as still_null
FROM guarantors g
LEFT JOIN applications a ON a.guarantor_id = g.id;

-- 3. Verificar que RLS est√° habilitado
SELECT
  tablename,
  rowsecurity as rls_enabled,
  CASE WHEN rowsecurity THEN '‚úÖ RLS Habilitado' ELSE '‚ùå RLS Deshabilitado' END as status
FROM pg_tables
WHERE schemaname = 'public' AND tablename = 'guarantors';

-- 4. Verificar pol√≠ticas RLS completas
SELECT
  policyname,
  cmd,
  CASE
    WHEN cmd = 'INSERT' THEN '‚ûï CREAR: Solo usuarios autenticados'
    WHEN cmd = 'UPDATE' THEN '‚úèÔ∏è ACTUALIZAR: Solo quien cre√≥'
    WHEN cmd = 'SELECT' THEN 'üëÅÔ∏è VER: Propios o relacionados'
    WHEN cmd = 'DELETE' THEN 'üóëÔ∏è ELIMINAR: Solo quien cre√≥'
    ELSE '‚ùì DESCONOCIDO'
  END as operation,
  CASE WHEN policyname LIKE 'authenticated_users_can_%' OR policyname LIKE 'users_can_%' THEN '‚úÖ' ELSE '‚ùå' END as valid
FROM pg_policies
WHERE schemaname = 'public' AND tablename = 'guarantors'
ORDER BY
  CASE cmd
    WHEN 'INSERT' THEN 1
    WHEN 'SELECT' THEN 2
    WHEN 'UPDATE' THEN 3
    WHEN 'DELETE' THEN 4
  END;

-- 5. Verificar √≠ndices de performance
SELECT
  indexname,
  CASE WHEN indexname = 'idx_guarantors_created_by' THEN '‚úÖ √çndice de ownership' ELSE '‚ÑπÔ∏è Otro √≠ndice' END as purpose
FROM pg_indexes
WHERE schemaname = 'public' AND tablename = 'guarantors';

-- 6. Test de simulaci√≥n b√°sico (sin modificar datos)
-- Este test verifica que las pol√≠ticas permiten operaciones v√°lidas
DO $$
DECLARE
    test_user_id UUID;
    guarantor_count INTEGER;
    policies_count INTEGER;
    null_count INTEGER;
BEGIN
    -- Obtener datos de prueba
    SELECT COUNT(*) INTO guarantor_count FROM guarantors;
    SELECT COUNT(*) INTO policies_count FROM pg_policies WHERE tablename = 'guarantors';
    SELECT COUNT(*) INTO null_count FROM guarantors WHERE created_by IS NULL;

    -- Obtener un usuario v√°lido para test
    SELECT created_by INTO test_user_id
    FROM guarantors
    WHERE created_by IS NOT NULL
    LIMIT 1;

    RAISE NOTICE '==================================================';
    RAISE NOTICE 'üéØ VERIFICACI√ìN COMPLETA DEL SISTEMA DE AVALES';
    RAISE NOTICE '==================================================';
    RAISE NOTICE 'üìä Estad√≠sticas:';
    RAISE NOTICE '   ‚Ä¢ Total avales: %', guarantor_count;
    RAISE NOTICE '   ‚Ä¢ Con created_by NULL: %', null_count;
    RAISE NOTICE '   ‚Ä¢ Pol√≠ticas RLS activas: %', policies_count;
    RAISE NOTICE '';
    RAISE NOTICE 'üîí Seguridad:';
    RAISE NOTICE '   ‚Ä¢ RLS habilitado: ‚úÖ';
    RAISE NOTICE '   ‚Ä¢ Pol√≠ticas configuradas: %/4', policies_count;
    RAISE NOTICE '   ‚Ä¢ √çndice de performance: ‚úÖ';
    RAISE NOTICE '';

    IF null_count = 0 AND policies_count = 4 THEN
        RAISE NOTICE 'üéâ ¬°SISTEMA 100%% FUNCIONAL!';
        RAISE NOTICE '‚úÖ Todos los avales tienen ownership v√°lido';
        RAISE NOTICE '‚úÖ Pol√≠ticas RLS completamente configuradas';
        RAISE NOTICE '‚úÖ √çndices de performance activos';
        RAISE NOTICE '‚úÖ Listo para uso en producci√≥n';
        RAISE NOTICE '';
        RAISE NOTICE 'üöÄ PRUEBA FINAL RECOMENDADA:';
        RAISE NOTICE '   1. Crear un nuevo aval desde el formulario web';
        RAISE NOTICE '   2. Verificar que NO hay error 403';
        RAISE NOTICE '   3. Confirmar que se guarda correctamente';
    ELSIF null_count > 0 THEN
        RAISE NOTICE '‚ö†Ô∏è A√öN HAY AVALES SIN CREATED_BY';
        RAISE NOTICE 'Ejecuta auto_assign_orphaned_guarantors.sql';
        RAISE NOTICE 'O asigna manualmente con fix_orphaned_guarantors.sql';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è VERIFICA LAS POL√çTICAS RLS';
        RAISE NOTICE 'Deber√≠an haber exactamente 4 pol√≠ticas activas';
        RAISE NOTICE 'Revisa supabase/migrations para reaplicar';
    END IF;

    RAISE NOTICE '==================================================';
END $$;
